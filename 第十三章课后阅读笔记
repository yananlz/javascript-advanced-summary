《深入理解JavaScript》18章
异常捕获的两个原则：一处出错的含义不能被描述，那么就抛错；找到一个可以捕获错误的位置，捕获异常。
JS中的异常捕获与其他大多数语言类似：try语句可以聚合语句，并能够让你拦截这些语句中的异常。
throw语法：throw <<value>>;可以抛出任何JS值。
try-catch-finally:try是必选的,而catch和finally两者至少要有其一。finally会永远执行。
Error构造器:通用异常构造器。所有其他的异常构造器都是它的子构造器。
RangeError:表示一个数值超出了允许的范围。
ReferenceError:表示发现了一个非法的引用值，通常是一个未知的变量。
SyntaxError:表示产生了一个语法解析错误。
TypeError:表示一个被操作值的实际类型与其期望的类型不一致。
URIError:表示某个全局的URI控制函数的使用不兼容其定义。
异常属性值：message:异常的信息。name:异常的名称。 Stack:栈跟踪。不是标准的，很多平台都在使用。
对于“手动的”debug,有两种信息很有效：1.数据：变量可以有哪些值 2.执行：异常发生于哪一行，哪些函数是可以执行到的。
数组是映射，不是元组。
数组仍然是对象，并且可以拥有对象的属性。但是这些属性不认为是数组的一部分，因为不认为它们是数组元素。
使用Array构造函数有两种方法：可以创建给定长度的空数组或给定元素的数组。对于数组构造函数，new是可选的。
数组索引的限制：索引i是数字，范围是0<=i<-2^32-1；最大长度:2^32-1。
在这个范围之外的索引被视为普通的属性键（字符串！）。不会作为数组元素呈现，且不影响length属性。
操作符in检测对象是否具有某个给定键的属性，也可以用来判断一个数组中是否存在给定的元素索引。

