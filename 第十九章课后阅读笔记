《ES6标准入门》第1-11章
《深入理解ES6》第1,2,3,4,5,6,7,10章
一种新的语法从提案到变成正式标准，需要经历5个阶段：展示阶段、征求意见阶段、草案阶段、候选阶段、定案阶段。一个提案只要能进入第二个阶段，基本认为其会包括在以后的正式标准里面。
Babel转码器：是一个广为使用的ES6转码器，可以将ES6代码转为ES5代码，从而在浏览器或其他环境执行。Babel的配置文件是.babelrc，存放在项目的根目录下。使用Babel的第一步是配置这个文件。
ES6新增了let命令，用于声明变量，所声明的变量只在let命令所在的代码块内有效。let声明的变量不存在变量提升，它所声明的变量一定要在声明后使用，否则会报错。
只要块级作用域内存在let命令，它所声明的变量就“绑定”这个区域，不再受外部的影响。
ES6明确规定，如果区块中存在let和const命令，则这个区块对这些命令声明的变量从一开始就形成封闭作用域。只要在声明之前就使用这些变量，就会报错。这在语法上称为“暂时性死区”（TDZ）。
暂时性死区的本质就是，只要进入当前作用域，所使用的变量就已经存在，但是不可获取，只有等到声明变量的那一行代码出现，才可以获取和使用该变量。
let不允许在相同作用域内重复声明同一个变量。
不允许在函数内部重新声明参数。function func(arg){let arg;//报错} function func(arg){{let arg;//不报错}}

