《你不知道的JavaScript(中卷)》第二部分第1/2章
《JavaScript权威指南》第17章1/2/3节
事实上，程序中出现在运行部分和将来运行部分之间的关系就是异步编程的核心。最常见的块单位是函数。
从现在到将来的“等待”，最简单的方法是使用一个通常称为回调函数的函数。
console.*方法族并不是JS正式的一部分，而是由宿主环境添加到JS中的。
所有的宿主环境都有一个共同“点”,即它们都提供了一种机制来处理程序中多个块的执行，且执行每块时调用JS引擎，这种机制被称为事件循环。
换句话说，JS引擎本身并没有时间的概念，只是一个按需执行JS任意代码片段的环境。“事件”调度总是由包含它的环境运行。
并行（是关于能够同时发生的事情）：计算最常见的工具是进程和线程。进程和线程独立运行，并可能同时运行；在不同的处理器，甚至不同的计算机上，但多个线程线程能够共享单个进程的内存。
与之相对的是，事件循环把自身的工作分成一个个任务并顺序执行，不允许对共享内存的并行访问和修改。通过分立线程中彼此合作的事件循环，并行和顺序执行可以共存。
